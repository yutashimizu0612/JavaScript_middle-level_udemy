//============================================
// そもそものお話
//============================================
// JavaScriptは、非同期処理が前提
// 問題点
// サーバーからデータを取得する前に、下記の処理が実行されて、エラーや思わぬ挙動が起こる可能性がある。
// const response = getDataFromServer(); // これが完了する前に、、、
// response.doSomething(); // こっちが実行されてしまう

// メリット
// 他の処理が完了するのを待つ必要がない


//============================================
// コールバック関数を用いる
//============================================
// function wait(callback, num) {
//   setTimeout(() => {
//     console.log(num);
//     callback(num);
//   }, 20);
// };

// wait((num) => {
//   num++;
//   wait(num => {
//     num++;
//   }, num)
// }, 0);

//============================================
// Promiseを用いる
//============================================
function wait(num) {
  return new Promise((resolve, reject) => {
    setTimeout(() => {
      console.log(num);
      resolve(num);
    }, num);
  });
};
